<html>
  <head>
      <script src="node_modules/vue/dist/vue.js"></script>
  </head>
  <body>
    <div id="example">
      <p>Message: "{{ message }}"</p>
      <p>Reversed: "{{ reversed }}"</p>
      <p>Reversed Function: "{{ reversedMessage() }}"</p>
    </div>
    <div id="demo"> {{ fullName }} </div>
    <div id="watching-demo">
      <p>Please ask a yes or no question: <input v-model="question"/></p>
      <p>{{ answer }}</p>
    </div>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/axios@0.12.0/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/lodash@4.13.1/lodash.min.js"></script>
  <script>
    var vm = new Vue({
      el: "#example",
      data: {
        message: "Hello Mike"
      },
      // Cached based on dependency
      computed: {
        reversed: function() {
          return this.message.split('').reverse().join('');
        }
      },
      // Always runs
      methods: {
        reversedMessage: function() {
          return this.message.split('').reverse().join('');
        }
      }
    });
    var vm2 = new Vue({
      el: '#demo',
      data: {
        firstName: 'Mike',
        lastName: 'Judge'
      },
      computed: {
        fullName: {
          get: function() {
            return this.firstName + ' ' + this.lastName;
          },
          set: function(newValue) {
            var names = newValue.split(' ');
            this.firstName = names[0]
            this.lastName = names[names.length - 1];
          }
        }
      }
    });
    var watchingDemoVM = new Vue({
      el: '#watching-demo',
      data: {
        question: '',
        answer: 'Answers to typed questions only'
      },
      watch: {
        question: function(newQuestion) {
          this.answer = 'Working....',
          this.getAnswer()
        }
      },
      methods: {
        getAnswer: _.debounce(
          function() {
            if (this.question.indexOf('?') === -1) {
              this.answer = 'Finish with a question mark';
              return;
            }
            this.answer = 'Thinking....';
            var vm = this;
            axios.get('https://yesno.wtf/api')
              .then(function(response) {
                vm.answer = _.capitalize(response.data.answer);
              })
              .catch(function(error) {
                vm.answer = 'There was an error geting to the API. '+error;
              });
          },
          500
        )
      }
    });
  </script>
</html>
