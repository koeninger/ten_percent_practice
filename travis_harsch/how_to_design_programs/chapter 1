Chapter 1: Processing Simple Forms of Data
1: Languages needed to communicate information and instructions to computers
Data - information expressed in a programming Languages
Atomic data - letters, numbers
Compound data - made up of smaller pieces of Data
instructions = operations
primitive operations - add, subtract, multiply, etc.  - words of the language
programs - combined primitive operations - forming sentences with the words

Intermission - downloaded/installed DR Racket - using how to design programs language option

2: Scheme - (+ 5 5) function, then order of numbers (/8 12)
  Scheme allows nesting of expressions (* (+ 2 2) (/ (* (+ 3 5) (/ 30 10)) 2)) = 48
   (sqrt A) (expt A B) (remainder A B) (log A) (sin A)
  circle area calculation: (define (area-of-disk r)
  (* 3.14 (+ r r)))
  (define (area-of-disk r)
  (* 3.14 (* r r)));
(area-of-disk 5) = 78.5

//area of ring calculation
(define (area-of-disk r)
  (* 3.14 (* r r)))
(area-of-disk 5)
(define (area-of-ring outer inner)
  (- (area-of-disk outer)
  (area-of-disk inner)))
(area-of-ring 5 3)


2.2.1
(define (fahrenheit->celsius t)
  (* 5/9 (- t 32)))
(fahrenheit->celsius 32)

2.2.2
(define (dollar->euro d)
  (* 0.81 d))
(dollar->euro 100)

2.2.3
(define (triangle height width)
(* 0.5 width height))
(triangle 10 10)
(triangle 100 30)


2.2.4
(define (convert3 o t h)
(+ o
  (* 10 t)
  (* 100 h)))
(convert3 5 5 7)

2.2.5
(define f n)
(+ (/ n 3) 2))

1. 
(define (f n)
(+ 10 (* n n)))
(f 10)

2. 
(define (f n)
(+ 20 (* n n .5)))
(f 10)

3.
(define (f n)
(- 2 (/ 1 n)))
(f 10)

2.3 Word Problems
Rarely get straightforward requests with prebuilt formulas; usually have to figure these out

Example - wage problem not clear until last sentence what needs to be done
(define (wage h)
  (* 12 h))
(wage 40)

2.3.1
(define (netpay h)
 (* .85 (* 12 h)))
(netpay 40)

2.3.2
(define (sumcoins p n d q)
(+ (* .01 p) (* .05 n) (* .1 d) (* .25 q)))
(sumcoins 17 0 0 4)

2.3.3
(define (total-profit c)
(- (* 5 c) (+ 20 (* .5 c))))
(total-profit 5)

2.4 Errors
Scheme expressions - ATOMIC - numbers and variables OR
COMPOUND - open parens, operations, more expressions, close parens
in Scheme, all numbers are not in parens, and operators are always first (+ 1 2)

so, (define f x ... y)
    (an-expression)

2.4.1
(+ (10) 20)
-operator doesn't need to be in parens
(10 + 20)
-function is out of place (+ 10 20)...same fix for first issue
(+ +)
cannot have two functions next to each other with no operators

logical errors - mistake that doesn't trigger an error from the environment, but calculates incorrect results
reason for systematic design of Programs

2.5 designing Programs
design recipe - steps to get something done in logical order
Requires these four things:
1. understand purpose of program - contract
CONTRACT
;; used to comment out a line - not read
so...
;;area-of-ring : number number -> numbers
;; PROGRAM NAME : data consumed/input (x2) -> output

HEADER - restates program name, gives input distinctive names
(define (area-of-ring outer inner))
(define PROGRAM NAME INPUT1 INPUT 2)

use contract and header to form purpose statements
PURPOSE STATEMENT - a brief description of what the progrgam does (non-narrative)
so
;;area-of-ring : number number -> number
;; to compute the area of a ring whose radius is
;; outer and whose hole has a radius of inner
(define (area-of-ring))

notes - constants show up as numbers, inputs = variables input later, or by user
question in the problem statement = good name for programs

EXAMPLES - come up with the examples before designing the program so you don't trust the program more than the prediction;
also requires programmer to think through the process; 
embed the examples in the purpose statement

;;area-of-ring : number number -> number
;; to compute the area of a ring whose radius is
;; outer and whose hole has a radius of inner
;; example (area-of-ring 5 3) should produce 50.24
(define (area-of-ring outer inner) ...)

replace ... with the actual expression, using operations and defined parameters
so 
(define area-of-ring outer inner)
  (- (area-of disk outer)
     (area-of-disk inner))  
TESTING - at minimum, does it compute correctly the examples from the problem statement?
 -can't usually show it works for all inputs, since there's often an infinite number, but will catch syntax, run-time and logical Errors
 -if something's wrong with outputs: are examples wrong? is there a logical mistake in program? or both? - may have to start discovery

 ALL TOGETHER:
 ;; Contract: ;;area-of-ring : number number -> number
 ;; Purpose: ;; to compute the area of a ring whose radius is
 ;; outer and whose hole has a radius of inner
 ;; Example: (area-of-ring 5 3) should produce 50.24
 ;; Definition: (define area-of-ring outer inner)
   (- (area-of disk outer)
      (area-of-disk inner))  
 ;; Tests: (area of ring 5 3)
 ;; expected value 50.24

 most difficult step is the design of body - requires understanding of written request and math relationships, as well as basic facts

 DOMAIN KNOWLEDGE
 - knowledge about the area, or domain that the problem comes from
 -programmers have to understand language of lots of applications - need understanding of possibilities of computer languages

 Part 3 - Programs are Function Plus Variable Definitions
 -program is usually multiple definitions - area-of-ring AND area-of-disk
 -programs are compused of several functions - main function - what you really need, auxillary functions - other functions needed
 -divide the problem into smaller, workable steps - vital for large Programs
 -break it up and compose parts back together 

 3.1
 movie theater scenario

make a list of the dependencies:

;;profit is difference between revenue and costs 
;;revenue = ticket sales = ticket price * no. of attendees
;;costs - two parts - fixed price of $180 per performance, variable depending on number of tickets
;;how does the number of attendees affect the ticket price?

develop a function for each
;;profit : number -> number
;;to compute profit as difference between revenue and costs at a given ticket-price
(define (profit ticket-price))
;;revenue and cost both depend on the ticket price
(p. 23)
