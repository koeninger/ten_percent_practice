(define-struct editor [pre post])
; An Editor is a structure:
; (make-editor String String)
; interpretation (make-editor s t) describes an editor
; whose visible text is (string-append s t) with
; the cursor displayed between s and t


;; Exercise 83 Design the function render, which consumes an Editor and produces an image
;; the purpose of the function is to render the text within an empty scene of 200 x 20 pixels
;; for the cursor, use 1 x 20 red rectangle and for the strings, black text of size 16

; graphical constants
(define SCENE (empty-scene 200 20))
(define CURSOR (rectangle 1 20 "solid" "red"))
(define TEXT-SIZE 16)
(define TEXT-COLOR "black")

(define-struct editor [pre post])
; (make-editor String1 String2)
; interpretation the text in editor has the curser displayed between String1 and String2

; Editor -> Image
; render the text within an empty scene
(check-expect (render (make-editor " " " ")) (overlay/align "left" "center"
                                                            (beside (text (editor-pre (make-editor " " " ")) TEXT-SIZE TEXT-COLOR)
                                                                    CURSOR
                                                                    (text (editor-post (make-editor " " " ")) TEXT-SIZE TEXT-COLOR))
                                                            SCENE))
(check-expect (render (make-editor "red" "crayon")) (overlay/align "left" "center"
                                                                   (beside (text (editor-pre (make-editor "red" "crayon")) TEXT-SIZE TEXT-COLOR)
                                                                           CURSOR
                                                                           (text (editor-post (make-editor "red" "crayon")) TEXT-SIZE TEXT-COLOR))
                                                                   SCENE))
(check-expect (render (make-editor "hel" "lo world"))   (overlay/align "left" "center"
                                                                       (beside (text (editor-pre (make-editor "hel" "lo world")) TEXT-SIZE TEXT-COLOR)
                                                                               CURSOR
                                                                               (text (editor-post (make-editor "hel" "lo world")) TEXT-SIZE TEXT-COLOR))
                                                                       SCENE))


(define (render ed)
  (overlay/align "left" "center"
               (beside (text (editor-pre ed) TEXT-SIZE TEXT-COLOR)
                       CURSOR
                       (text (editor-post ed) TEXT-SIZE TEXT-COLOR))
                       SCENE))

Exercise 84 Design edit. Consumes two inputs, an editor ed and a KeyEvent ke, produces
another editor. Task is to add a single-character KeyEvent ke to the end of pre field of ed,
unless ke denots the backspace "\b" key. In that ase, it deletes the character immediately
to the left of the cursor (if there are any). The function ignores the tab key "\t" and 
return key "\r". Pays attention to only two KeyEvents longer than one letter: "left" 
and "right" Left arrow moves the cursor one character to the left if any, and the right
arrow moves it one character to the right if any. All other KeyEvents are ignored. 

Auxilary functions needed string-first, string-rest, string-last, string-remove-last 

