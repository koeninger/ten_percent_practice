It is the purpose of a data definition to describe parts of this universe and to name these parts
so that we can refer to them concisely, a named data definition is a description of a 
collection of data, and that name is usable in other data definitions and 
in function signatures 
In a function signature, the name specifies what data a function will deal with and,
implicitly, which parts of the universe of data it won't deal with

Example: 

; A BS is one of: ;; a mixe of English and BSL, precise and unambigous 
; - "hello",
; - "world", or
; - pi. 

; the definition of structure types revises this to expand all possible structure
; instances 
(make-posn "hello" 0)
(make-posn "world" 1)
(make-posn "good" 2)
(make-posn "bye" 3)
(make-posn (make-posn 0 1) 2)
(make-posn 0 3) 
(make-posn 1 3) 
(make-posn 2 3) 
(make-posn 3 3) 

;; adding another structure type definition mixes and matches everything again
; add the definition for ball, also with two fields 
(define-stuct ball [location velocity]) 
(make-ball -1 0)
(make-ball -1 1) 
(make-ball -1 2)
(make-ball -1 3)
(make-ball "bye" #t) 

;; a data definition for structure types describes large collections
;; of data via combination of existing data definitions with instances
; Posn is (make-posn Number Number) 

; possible to construct an instance of posn that doesn't satisfy the requirement that both 
; fields contain numbers
(make-posn (make-pson 1 1) "hello")
; this structure contains a posn in the x field and a sring in the y field

Exercise 76 formulate data definitions for the following strucutre type definitions: 

(define-struct movie [title producer year])

(define-struct person [name hair eyes phone])

(define-struct pet [name number])

(define-struct CD [artist title price])

(define-struct sweater [material size producer])
