; Exercise 65. Take a look at the following structure type definitions:
;(define-struct movie [title producer year])
;(define-struct person [name hair eyes phone])
;(define-struct pet [name number])
;(define-struct CD [artist title price])
;(define-struct sweater [material size producer])
;Write down the names of the functions (constructors, selectors, and predicates) that each introduces.

(define-struct movie [title producer year])
make-movie
movie-title
movie-producer
movie-year
movie?

(define-struct person [name hair eyes phone])
make-person
person-name
person-hair
person-eyes
person-phone
person?

(define-struct pet [name number])
make-pet
pet-name
pet-number
pet?

(define-struct CD [artist title price])
make-CD
CD-artist
CD-title
CD-price
CD?

(define-struct sweater [material size producer])
make-sweater
sweater-material
sweater-size
sweater-producer
sweater?

; ===

; Exercise 66. Revisit the structure type definitions of exercise 65. Make sensible guesses as to what kind of values go with which fields. Then create at least one instance per structure type definition.

(define-struct movie [title producer year])
(define-struct person [name hair eyes phone])
(define-struct pet [name number])
(define-struct CD [artist title price])
(define-struct sweater [material size producer])

(make-movie "NPM Wars" "Nodius Maximus" 2019)
(make-person "Bob" "red" "two" "515-555-1234")
(make-pet "Rogue" 4)
(make-CD "The Red Hats" "Number 8 baby!" "IBM")
(make-sweater "alpaca" "XXL" "NiceSweatshop")

; ===

; Exercise 67. Here is another way to represent bouncing balls:
;(define SPEED 3)
;(define-struct balld [location direction])
;(make-balld 10 "up")
;Interpret this code fragment and create other instances of balld.

; This fragment creates a structure holding the location and direction of travel of a ball, with the speed defined separately as SPEED.
; (make-balld 10 "up") would be an instance of balld representing a ball, 10 pixels from the top, moving upwards (presumably at SPEED velocity).

; Other instances could be:

(make-balld 10 "down") ; at the top of the canvas, moving down
(make-balld 20 "up") ; at the bottom of a 20 pixel canvas, now bouncing up

; ===
